#!/usr/bin/perl -w -I /shares/admin/bin/text

# unclear_ids - adds or updates id attribute on <unclear> and <gap/> tags

# Greg Murray <gpm2a@virginia.edu>
# Written: 2003-01-14 (based on div_ids)
# Last modified: 2003-03-27

# unclears and gaps are simply numbered sequentially through the
# document. So first unclear tag is id="u1", first gap tag is
# id="g1", etc.

# This script is smart enough to handle multiple unclear and/or gap
# elements on the same line.


use strict;
##use DlpsText;

my ($me, $usage, $infile, @infile);
my ($unclears, $gaps, $go, $i, $el, $prefix, $c, $test, $buffer, $match, $value);

$me = 'unclear_ids';
$usage = <<EOD;

$me - adds or updates id attribute on <unclear> and <gap/> tags
Usage: $me filenames
In: TEI XML file(s)
Out: If changes are necessary, copies input file to [filename].bak, then overwrites original input file

EOD

die $usage if (! @ARGV);
foreach (@ARGV) {
    die $usage if /^-/;   # this script has no switches
}

foreach $infile (@ARGV) {
    $unclears = 0; $gaps = 0;

    # read input file
    open(IN, $infile) || die "$me: ERROR: Cannot read '$infile': $!\n";
    @infile = <IN>;
    close IN;

    # test whether any of this is necessary
    $go = 0;
    foreach (@infile) {
	if ( /<unclear/ or /<gap/ ) {
	    $go = 1;
	    last;
	}
    }
    if (not $go) {
	##DlpsText::log($me, $infile, 'No unclear or gap elements found. No changes made.');
	next;
    }

    # make backup
    open(BAK, ">${infile}.bak") || die "$me: ERROR: Cannot write '${infile}.bak': $!\n";
    foreach (@infile) {
        print BAK;
    }
    close BAK;

    # make changes, overwriting input file
    open(OUT, ">$infile") || die "$me: ERROR: Cannot write '$infile': $!\n";
    foreach (@infile) {
	if ( /<unclear/ or /<gap/ ) {
	    # check this line twice: once for unclears, once for gaps
	    for ($i = 1; $i <= 2; $i++) {
		if ($i == 1) {
		    $el = 'unclear';
		    $prefix = 'u';
		    $c = $unclears;
		} else {
		    $el = 'gap';
		    $prefix = 'g';
		    $c = $gaps;
		}

		if ( /<$el/ ) {
		    $test = $_;
		    $buffer = '';
		    while ( $test =~ /<$el[^>]*>/ ) {
			$match = $&;
			$buffer .= $`;
			$test = $';

			$c++;
			$value = "$prefix$c";

			if ( $match =~ /<$el[^>]* id=["'][\w\.\-]*["'][^\/>]*\/?>/ ) {
			    # has id attribute; replace existing value
			    $match =~ s/(<$el[^>]* id=["'])[\w\.\-]*(["'][^\/>]*\/?>)/$1$value$2/;
			    $buffer .= $match;
		        } else {
			    # add id attribute
			    $match =~ s/(<$el[^\/>]*)(\/?>)/$1 id="$value"$2/;
			    $buffer .= $match;
		        }
		    }
		    $buffer .= $test;
		    $_ = $buffer;
                    if ($i == 1) { $unclears = $c; } else { $gaps = $c; }
	        }
            }
	}
	print OUT;
    }
    close OUT;

    ##DlpsText::log($me, $infile, 'Added or updated id attribute on <unclear> and <gap/> tags');
}
