#!/usr/bin/perl -w

# pb_outside_divs - moves <pb/> tags outside the divs and into the <body>; only applicable to newspaper markup

# Greg Murray <gpm2a@virginia.edu>
# Written: 2004-05-24


use strict;

my ($me, $usage, $infile, @infile, $ok, $prev_line);

$me = 'pb_outside_divs';
$usage = <<EOD;

$me - moves <pb/> tags outside the divs and into the <body>; only applicable to newspaper markup
Usage: $me filenames
In: TEI XML file(s)
Out: Copies each input file to [filename].bak, then overwrites original input file

EOD

die $usage if (! @ARGV);
foreach (@ARGV) {
    die $usage if /^-/;   # this script has no switches
}

foreach $infile (@ARGV) {
    # read input file
    open(IN, $infile) || die "$me: ERROR: Cannot read '$infile': $!\n";
    @infile = <IN>;
    close IN;

    # verify that this is newspaper markup
    $ok = 0;
    foreach (@infile) {
	if ( /<!ENTITY % NEWSPAPER ["']INCLUDE["']>/ ) {
            $ok = 1;
        }
       if ( /<TEI.2/ ) {
           last;
       }
    }
    if (not $ok) {
        warn "$me: $infile: WARNING: This script is for use on newspaper markup only! File not processed.\n";
        next;
    }

    # make backup
    open(BAK, ">${infile}.bak") || die "$me: ERROR: Cannot write '${infile}.bak': $!\n";
    foreach (@infile) {
	print BAK;
    }
    close BAK;

    # make changes, overwriting input file
    $prev_line = '';
    open(OUT, ">$infile") || die "$me: ERROR: Cannot write '$infile': $!\n";
    foreach (@infile) {
	if ( /^<pb/ ) {
	    if ( $prev_line =~ /^<div\d/ ) {
		# page break immediately follows a div start tag; swap the 2 lines; output pb first, then div
		print OUT;
		print OUT $prev_line;
		$prev_line = '';
	    } else {
		print OUT $prev_line unless ($prev_line eq '');
		$prev_line = $_;
	    }
	} else {
	    print OUT $prev_line unless ($prev_line eq '');
	    $prev_line = $_;
	}
    }
    print OUT $prev_line;  # output last line of file
    close OUT;
}
