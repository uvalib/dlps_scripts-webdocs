<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd"><html><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><title>DLPS ImageMagick Screen Derivative Testing</title></head><body><h2 align="center">DLPS ImageMagick Screen Derivative Testing </h2><p>Below are six images from a CD used for testing image workflow processes in the past year or so:</p><ul>  <li><a href="image1.htm">040630a_045</a></li>  <li><a href="image2.htm">040630a_045 (face)</a> </li>  <li><a href="image3.htm">040630a_060</a></li>  <li><a href="image4.htm">040630a_064</a></li>  <li><a href="image5.htm">040630a_083</a></li>  <li><a href="image6.htm">040630a_083 (face)</a></li></ul><p>There are two face images that are cropped portions of their respective images. Jama recommended this as it would make more clear what applying filters and resampling will do to the detail of an image. However, I did want to include full images so as to give a sense as to whether we would see any differences.</p><p>Each image contains the same number of derivatives and process used to create them. Included are links to the original scanned TIF as well as a TIF that has been resampled to 72dpi to see how the image size changes (if you so desire). The various derivatives test ImageMagick <strong>Convert</strong> command options against either the original TIF or a standard DLPS screen size JPG. (Wording above each image gives a brief description of the option and image formats.) Several filters were used in testing to see if any had better quality than the default. </p><table width="90%"  border="1" align="center" bgcolor="#CCCCCC">  <tr>    <th>Option</th>    <th>Description</th>  </tr>  <tr>    <td>density</td>    <td>&quot;The density option is an attribute and does not alter the underlying raster image. It may be used to adjust the rendered size for desktop publishing purposes by adjusting the scale applied to the pixels.&quot;</td>  </tr>  <tr>    <td>geometry</td>    <td>(aka resize) specifies the maximum size of the output image while maintaining aspect ratio </td>  </tr>  <tr>    <td>resample</td>    <td>&quot;Resize the image so that its rendered size remains the same as the original at the specified target resolution.&quot;</td>  </tr>  <tr>    <td>sample</td>    <td>scale the image using pixel sampling rather than any specified filter </td>  </tr>  <tr>    <td>scale</td>    <td>ignores the filter specified when resizing the image and uses a simple and fast algorithm </td>  </tr>  <tr>    <td>filter</td>    <td>use this algorithm when resizing an image: Lanczos (default), cubic, quadratic, gaussian, etc. </td>  </tr></table><p>To see how these images would look in a desktop application such as Powerpoint. Right click on the image and save it. Then insert it into the application document.</p><p>Based on my understanding of density, it appears to allow us to continue scanning at the desired resolution we have in place but modifies something in the header of the JPG image, such that PowerPoint (and Word) display it in the larger size as desired. (#4) And from further testing, it appears that we can apply the density option to existing screen image JPG files and see no change to the image (#2), which does indicate that the underlying image is not modified simply header information. </p><h3>Recommendations</h3><ul>  <li> Add -density 72x72 to our existing Convert command in our screen derivative generation process. </li>  <li>Use Mogrify -density 72x72 to go through all the existing screen JPG images in the repository and &quot;improve&quot; them to support desktop publication needs. </li></ul></body></html>